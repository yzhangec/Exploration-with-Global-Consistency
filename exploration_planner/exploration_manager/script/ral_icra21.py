import matplotlib.pyplot as plt
import numpy as np
import math


def processLine(s):

    print(s)

    s = s.split(",")

    search_t = float(s[1].split(":")[1])
    traj_t = float(s[2].split(":")[1])
    cost = float(s[3].split(":")[1].strip("\n"))

    return search_t, traj_t, cost


def benchmark():
    """ process file into data array: """
    f_1 = open(
        "/home/boboyu/data/bag/ral_icra21_useful/benchmark/maze/nbvp2/2_performance.txt",
        'r')
    line_num = 0
    max_line_num = 320

    time = []
    known_vol = []

    while line_num < max_line_num:
        # Read several lines at one loop
        for i in range(3):
            l1 = f_1.readline()
            line_num += 1
        if line_num > max_line_num:
            break

        # Get data at line
        l1 = l1.split(",")

        ti = float(l1[2].split(":")[1].strip(" "))
        vi = float(l1[3].split(":")[1].strip(" ").strip("\n"))
        time.append(ti)
        known_vol.append(vi)

    print("time =", time)
    print("vol =", known_vol)


def plotMaze():
    time1 = [
        0.0, 3.66509, 6.29896, 8.81665, 11.2652, 13.7182, 16.4192, 19.0193,
        21.6214, 24.3194, 26.9622, 29.4193, 32.0193, 34.6252, 37.4248, 39.9244,
        42.4242, 44.9799, 47.6239, 50.1805, 52.8169, 55.3258, 58.2347, 60.9437,
        63.6208, 66.3592, 69.1329, 72.1233, 74.9237, 78.0184, 81.1714, 83.8717,
        86.945, 89.6496, 92.8744, 95.4743, 98.8113, 101.459, 104.466, 107.014,
        110.26, 112.958, 115.655, 119.222, 122.701, 125.2, 127.554, 130.099,
        132.699, 135.353, 138.281, 141.262, 143.761, 148.463, 151.628, 154.637,
        157.958, 160.553, 163.655, 166.842, 169.292, 172.613, 184.091, 198.56,
        211.413, 216.672, 221.936, 225.529, 236.096, 251.287, 264.156, 275.057,
        283.506, 286.105, 288.758, 291.405, 294.487, 297.198, 300.801, 303.552,
        306.759, 309.999, 313.577, 316.177, 318.783, 321.184, 323.786, 327.33,
        329.882, 332.484, 335.897, 338.396, 342.606, 347.046, 349.63, 353.319,
        356.987, 360.722, 363.42, 369.304, 371.92, 375.833, 379.757, 382.408,
        386.546, 390.873, 393.526, 397.651, 400.401, 405.625, 412.477, 418.168,
        425.378, 434.486, 441.9, 446.09, 448.649, 454.223, 456.872, 459.522,
        463.448, 467.498, 471.655, 474.354, 478.218, 480.767, 484.837, 488.778,
        491.529, 495.715, 498.164, 503.783, 518.82, 521.468, 528.297, 533.682,
        537.624, 541.653, 544.203, 546.753, 549.304, 551.805, 554.503, 561.597,
        564.148, 566.697, 570.727, 573.177, 575.927, 578.479, 581.135, 586.314,
        590.038, 592.55, 596.488, 600.426, 602.968, 606.693, 610.529, 612.979,
        616.959, 622.478, 624.981, 628.736, 631.137, 634.89, 638.918, 641.515,
        645.423, 647.988, 650.588, 654.482, 658.557, 660.958, 665.267, 669.578,
        671.932, 676.262, 680.574, 683.074, 687.634, 692.146, 694.796, 705.596,
        708.349, 710.946, 713.501, 716.197, 720.78, 725.317, 727.873, 732.369,
        736.761, 741.288, 743.886, 748.257, 752.637, 755.339, 759.788, 766.128,
        768.829, 779.46, 782.061, 786.731, 791.213, 795.731, 800.193, 804.839,
        809.217, 811.817, 814.416, 823.243, 827.982, 835.038, 855.674, 858.374
    ]
        # 860.875, 863.525, 866.125, 873.242, 875.883, 878.53, 903.628, 928.592,
        # 953.518, 978.257
    vol1 = [
        0.0, 25.966, 37.251, 39.134, 65.314, 97.223, 155.007, 166.961, 183.602,
        195.894, 204.495, 237.063, 239.496, 240.669, 249.409, 286.796, 294.142,
        295.322, 303.413, 332.821, 374.032, 390.355, 404.605, 441.91, 480.882,
        493.894, 505.413, 540.677, 550.632, 559.597, 564.145, 577.16, 578.533,
        579.366, 586.921, 587.541, 588.7, 592.177, 595.94, 596.31, 598.462,
        599.13, 620.507, 638.037, 640.243, 641.426, 642.425, 642.853, 643.154,
        671.371, 687.187, 730.177, 736.991, 763.181, 773.376, 800.097, 807.688,
        815.674, 848.696, 895.257, 913.873, 921.873, 924.914, 925.231, 925.326,
        927.417, 929.257, 932.181, 933.255, 934.177, 934.741, 934.947, 935.601,
        937.092, 937.552, 938.375, 981.272, 996.811, 1008.86, 1020.72, 1033.13,
        1047.85, 1057.88, 1061.85, 1063.17, 1063.29, 1065.35, 1071.14, 1071.65,
        1080.85, 1094.56, 1099.88, 1104.31, 1110.5, 1132.33, 1170.26, 1188.44,
        1201.2, 1239.68, 1246.05, 1249.18, 1291.56, 1300.99, 1312.35, 1320.5,
        1331.39, 1332.33, 1334.36, 1337.99, 1340.92, 1341.93, 1374.1, 1379.11,
        1413.11, 1413.96, 1415.76, 1418.01, 1418.54, 1420.07, 1456.23, 1473.25,
        1498.02, 1501.21, 1502.6, 1504.92, 1505.81, 1506.2, 1507.85, 1518.34,
        1526.55, 1529.54, 1530.6, 1530.74, 1531.9, 1532.92, 1533.49, 1534.38,
        1534.57, 1535.0, 1535.29, 1535.7, 1536.14, 1536.54, 1536.67, 1536.91,
        1538.98, 1541.87, 1542.93, 1545.08, 1548.78, 1580.17, 1625.88, 1660.79,
        1670.95, 1673.47, 1716.8, 1728.36, 1729.16, 1748.44, 1783.5, 1807.27,
        1812.8, 1823.34, 1826.7, 1827.64, 1830.08, 1832.88, 1837.98, 1838.86,
        1839.25, 1850.42, 1867.84, 1893.49, 1908.54, 1937.94, 1941.99, 1943.61,
        1955.1, 1959.3, 1963.18, 1966.38, 1967.28, 1970.37, 1971.02, 1971.66,
        1972.33, 1972.8, 1984.99, 2007.1, 2033.57, 2050.41, 2054.79, 2059.78,
        2069.63, 2075.19, 2077.18, 2080.37, 2081.76, 2083.69, 2096.66, 2103.1,
        2104.03, 2107.13, 2113.13, 2127.97, 2143.93, 2146.63, 2148.65, 2152.89,
        2155.9, 2157.79, 2158.49, 2159.72, 2161.76, 2162.23, 2163.32
    ]
    """ , 2163.62,
        2163.68, 2164.35, 2164.53, 2165.03, 2166.4, 2166.61, 2166.76, 2166.87,
        2166.96 """
    for i in range(len(time1)):
        time1[i] = time1[i] * 780/ 858.374

    time2 = [
        3.60736, 6.10679, 8.65972, 11.2072, 13.7071, 16.3588, 18.9073, 21.4599,
        24.1578, 27.0621, 29.9318, 32.4324, 35.1317, 37.7824, 40.3333, 42.9396,
        45.5328, 52.2434, 54.7425, 57.2423, 60.9952, 63.4956, 66.9434, 69.5989,
        72.2466, 74.8946, 78.5621, 81.26, 84.5562, 87.1126, 90.7687, 93.2682,
        95.8174, 98.417, 101.569, 105.061, 107.807, 110.989, 113.6, 116.04,
        119.751, 122.351, 124.901, 127.352, 129.95, 133.271, 135.821, 139.038,
        141.638, 144.188, 146.688, 149.239, 152.714, 155.267, 158.934, 161.435,
        163.934, 167.562, 171.49, 174.192, 176.594, 179.139, 183.408, 186.009,
        190.308, 196.193, 205.497, 212.951, 215.464, 218.014, 220.614, 224.559,
        227.063, 229.562, 232.115, 236.092, 238.6, 242.98, 245.545, 249.618,
        254.12, 256.87, 259.421, 262.02, 266.483, 270.978, 275.511, 278.11,
        282.72, 285.321, 287.871, 290.368, 294.78, 297.335, 302.079, 304.778,
        309.547, 312.097, 314.549, 317.149, 321.912, 326.423, 328.87, 331.519,
        333.971, 336.52, 339.07, 341.721, 344.32, 348.733, 351.231, 355.763,
        358.343, 360.994, 365.23, 369.478, 371.995, 376.186, 378.74, 383.203,
        385.852, 388.353, 392.981, 395.637, 400.25, 405.103, 407.8, 420.482,
        425.342, 430.104, 433.056, 442.865, 452.34, 468.169, 475.597, 480.538,
        496.975, 499.576, 515.971, 518.523, 523.56, 526.112, 528.609, 531.259,
        533.809, 536.359, 540.889, 543.507, 548.405, 553.304, 557.875, 562.844,
        565.44, 567.895, 570.492, 572.994, 575.691, 578.093, 580.741, 583.341,
        586.14, 590.862, 593.514, 596.011, 601.374, 603.87, 606.473, 616.132,
        618.712, 640, 680
    ]
    vol2 = [
        25.399, 37.425, 37.66, 45.833, 110.69, 143.056, 190.497, 225.454,
        269.406, 322.134, 337.842, 355.916, 398.649, 448.84, 466.34, 495.215,
        531.111, 539.619, 543.412, 556.05, 557.389, 563.695, 565.239, 590.744,
        611.613, 647.96, 687.739, 722.097, 731.578, 759.754, 762.269, 770.266,
        771.641, 774.699, 776.902, 777.499, 786.141, 795.719, 796.973, 798.115,
        803.55, 804.732, 810.958, 811.102, 821.044, 831.817, 837.389, 840.991,
        869.888, 917.037, 969.197, 1022.36, 1061.64, 1070.4, 1110.13, 1134.61,
        1159.96, 1179.34, 1201.83, 1224.87, 1227.06, 1259.84, 1305.88, 1316.12,
        1318.46, 1326.41, 1327.75, 1329.4, 1329.81, 1330.71, 1374.19, 1398.57,
        1406.48, 1409.5, 1416.04, 1424.42, 1454.94, 1488.96, 1510.53, 1511.52,
        1562.18, 1567.67, 1568.46, 1569.85, 1571.06, 1583.4, 1589.32, 1602.48,
        1611.1, 1617.24, 1618.9, 1622.35, 1623.48, 1625.18, 1626.18, 1627.06,
        1628.14, 1629.69, 1630.16, 1631.03, 1632.36, 1632.62, 1633.43, 1634.9,
        1635.37, 1635.64, 1636.25, 1638.85, 1655.3, 1678.17, 1712.89, 1742.21,
        1765.11, 1797.17, 1814.88, 1827.19, 1832.68, 1833.76, 1837.54, 1839.87,
        1850.21, 1860.41, 1863.68, 1906.73, 1935.35, 1950.16, 1956.84, 1961.37,
        1975.25, 1987.61, 2012.3, 2015.72, 2017.81, 2018.61, 2019.97, 2037.26,
        2038.2, 2045.81, 2049.39, 2055.66, 2057.66, 2061.71, 2062.36, 2063.04,
        2064.61, 2067.65, 2072.96, 2085.33, 2099.22, 2108.28, 2116.57, 2119.4,
        2124.85, 2126.1, 2126.35, 2126.72, 2127.0, 2127.2, 2127.64, 2128.03,
        2128.74, 2129.4, 2131.64, 2133.72, 2136.93, 2138.3, 2139.01, 2139.68,
        2140.37, 2148.41, 2148.41
    ]

    time3 = [
        0, 13.93, 23.69, 30.54, 37.05, 41.75, 51.19, 58.3, 65.17, 73.5, 82.47,
        91.09, 98.34, 108.05, 114.63, 125.58, 134.89, 143.85, 153.12, 159.63,
        168.69, 178.28, 182.22, 190.23, 199.71, 204.66, 211.68, 221.89, 231.36,
        236.71, 246.69, 256.09, 262.87, 272.81, 279.72, 289.41, 298.58, 307.11,
        314.07, 323.56, 333.21, 341.67, 349.86, 360.61, 371.16, 381.16, 389.44,
        397.17, 404.04, 411.42, 418.89, 427.53, 437.19, 444.37, 454.84, 465.43,
        474.91, 484.23, 492.6, 504.449, 513.3, 521.97, 528.73, 540.72, 551.87,
        563.05, 572.48, 579.99, 583.64, 601.63, 613.83, 623.28, 632.18, 637.17,
        644.89, 649.19, 659.7, 668.69, 676.83, 687.549, 694.96, 706.12, 715.94,
        725.7, 735.1, 745.37, 752.51, 761.21, 769.08, 775.11, 784.21, 792.64,
        802.39, 812.28, 822.06, 831.13, 839.48, 846.15, 843.86, 861.97, 870.48,
        879.58, 874.0, 896.36, 903.919, 910.199, 919.199, 1200
    ]
    vol3 = [
        0, 133.76, 209.728, 281.664, 318.208, 352.96, 356.288, 407.936, 437.76,
        463.936, 537.28, 575.872, 645.248, 645.44, 715.392, 789.952, 884.928,
        932.736, 934.208, 983.552, 994.752, 995.2, 1021.63, 1028.8, 1043.33,
        1066.69, 1067.33, 1067.33, 1108.22, 1191.42, 1191.62, 1214.34, 1259.26,
        1259.97, 1306.3, 1376.51, 1376.51, 1424.32, 1432.83, 1433.15, 1436.1,
        1484.61, 1494.14, 1544.77, 1544.77, 1545.47, 1661.57, 1751.87, 1776.96,
        1792.9, 1843.97, 1872.83, 1876.54, 1881.92, 1882.11, 1882.24, 1914.18,
        1953.6, 1964.54, 1965.82, 1966.46, 2011.46, 2017.98, 2021.12, 2022.85,
        2022.85, 2023.74, 2026.88, 2028.1, 2029.25, 2029.25, 2029.44, 2040.9,
        2092.22, 2098.3, 2099.14, 2102.72, 2104.83, 2105.47, 2107.01, 2107.26,
        2107.58, 2107.78, 2111.49, 2122.24, 2151.42, 2228.86, 2231.62, 2237.89,
        2241.92, 2243.78, 2243.9, 2244.99, 2246.4, 2247.23, 2247.23, 2248.19,
        2249.22, 2250.94, 2251.58, 2252.1, 2252.22, 2252.74, 2254.53, 2254.78,
        2256.64, 2284.99, 2284.99
    ]

    for i in range(len(vol3)):
        vol3[i] = vol3[i] * 2159 / 2284.99

    time4 = [
        2.37842, 3.81519, 5.02901, 6.32876, 7.62916, 8.92917, 10.1839, 11.5296,
        12.831, 14.0831, 15.3301, 16.5799, 17.7297, 19.0301, 20.3306, 21.6811,
        22.9293, 24.2814, 25.6304, 26.9814, 28.1856, 29.486, 30.831, 32.1307,
        33.3761, 34.5908, 35.9315, 37.3307, 38.6323, 39.886, 41.0842, 42.4152,
        43.7865, 45.1817, 46.6062, 47.8516, 49.4161, 50.9114, 52.1608, 53.4119,
        54.7105, 55.9608, 57.2608, 58.4606, 59.6613, 60.9113, 62.1614, 63.3609,
        64.7771, 66.0178, 67.3618, 68.5627, 69.9125, 71.212, 72.4788, 73.9138,
        75.2608, 76.5131, 77.7124, 79.1135, 80.3628, 81.6188, 82.9617, 84.3133,
        85.6143, 86.9462, 88.2618, 89.5637, 90.813, 92.0619, 93.3132, 94.5654,
        95.814, 97.0136, 98.3139, 99.6619, 100.863, 102.163, 103.463, 106.353,
        107.64, 108.882, 110.107, 111.503, 112.853, 114.104, 115.405, 116.603,
        117.999, 120.645, 121.967, 123.167, 124.467, 125.767, 127.068, 128.319,
        129.673, 130.92, 132.184, 133.469, 134.67, 135.971, 137.171, 138.521,
        139.721, 142.074, 143.326, 144.535, 145.822, 147.072, 148.422, 149.828,
        151.129, 152.374, 153.722, 154.923, 156.272, 157.472, 158.771, 160.124,
        161.273, 162.523, 165.781, 167.083, 171.178, 182.256, 193.29
    ]
    vol4 = [
        0.0, 30.448116632860042, 39.7711430020284, 41.11116328600406,
        52.465089249492905, 82.67485801217038, 97.35357200811359,
        133.68899087221095, 176.88048073022313, 215.98710547667343,
        247.73130730223124, 270.63796551724135, 296.2224675456389,
        314.10185294117645, 349.6859817444219, 359.8393813387424,
        363.7759655172414, 386.51786713995944, 437.3298985801217,
        456.35159634888436, 496.2600365111562, 514.6413803245437,
        530.0417281947261, 533.295121703854, 552.9000578093306,
        581.1283539553751, 594.4231125760649, 617.1155872210952,
        630.8409097363084, 652.9160963488845, 671.2787677484787,
        706.4608904665315, 724.1985851926978, 732.2661663286003,
        751.2153711967546, 784.5807778904665, 795.8039969574037,
        800.6983661257606, 802.0647474645031, 803.5662292089249,
        804.8732981744422, 805.188532454361, 805.9123630831642,
        809.9532931034483, 817.998906693712, 845.3770588235293,
        863.0158995943206, 888.6882718052738, 902.6596308316431,
        924.0889716024341, 932.8880720081136, 933.1275182555781,
        935.6087525354969, 953.9549482758621, 985.6881663286005,
        1006.2431987829616, 1046.1472454361055, 1077.8914472616632,
        1091.7518701825559, 1122.4866632860042, 1126.6055780933063,
        1134.4479918864097, 1147.2660547667344, 1149.9021602434077,
        1166.8720892494928, 1188.4881541582151, 1224.8773935091278,
        1269.0651115618664, 1315.076135902637, 1336.0112068965516,
        1365.6893610547668, 1394.9720993914807, 1422.0141480730224,
        1432.811196754564, 1454.8446450304261, 1488.4549898580124,
        1509.0495638945235, 1531.0280933062882, 1564.8251622718053,
        1578.8184888438134, 1581.992799188641, 1584.0357809330628,
        1588.2535496957403, 1594.5362677484786, 1598.9078093306289,
        1600.0061866125761, 1630.9035395537524, 1658.8901926977687,
        1681.5497160243408, 1709.9208012170384, 1714.9623529411763,
        1716.4231947261665, 1717.80715010142, 1724.1997058823529,
        1756.5908519269778, 1783.5230628803245, 1820.5383772819473,
        1842.165425963489, 1869.4271501014198, 1905.0585091277892,
        1928.4209939148075, 1952.8269371196754, 1966.4248478701825,
        1994.7410141987828, 2012.2711156186613, 2017.4884077079107,
        2018.8943306288031, 2022.0906085192698, 2026.2205070993914,
        2027.3188843813386, 2027.9339756592292, 2054.1083062880325,
        2091.617890466531, 2121.823265720081, 2131.049634888438,
        2139.34238336714, 2147.591196754564, 2154.939340770791,
        2156.2683772819473, 2157.487576064909, 2158.2015212981746,
        2162.1227281947263, 2165.4727789046656, 2166.087870182556,
        2166.6919776876266, 2166.7249290060854, 2166.7249290060854
    ]

    for i in range(len(vol4)):
        vol4[i] = vol4[i] * 2150 / 2166.72

    fig, ax = plt.subplots()  # Create a figure containing a single axes.

    ax.plot(time1, vol1, '-r', label='Classic frontier')
    ax.plot(time2, vol2, '-g', label='Rapid frontier')
    ax.plot(time3, vol3, color='#FF00FF', label='NBVP')
    ax.plot(time4, vol4, '-b', label='Proposed')

    # plt.locator_params(axis='x', nbins=5)
    # plt.locator_params(axis='y', nbins=8)
    ax.set_xlim([0, 1000])
    ax.set_ylim([0, 2300])
    ax.set_xlabel("Time (s)")
    ax.set_ylabel("Coverage (m^3)")
    ax.legend(loc=0)
    plt.grid()
    plt.show()


def plotBridge():

    time1 = [
        0, 5.04727, 8.88602, 12.7379, 16.738, 20.6372, 24.5385, 28.2883,
        32.1392, 35.8886, 39.7885, 43.7872, 47.5471, 51.2883, 55.3812, 59.2885,
        63.1867, 67.0867, 71.0398, 74.7874, 78.7868, 82.5869, 86.5878, 90.5363,
        94.3883, 98.4125, 102.335, 106.088, 109.938, 113.992, 117.937, 121.838,
        125.875, 129.815, 133.817, 137.717, 141.667, 145.415, 149.415, 153.567,
        157.471, 161.271, 165.285, 169.336, 173.289, 177.147, 180.943, 185.137,
        188.89, 192.689, 196.64, 200.488, 204.439, 208.191, 212.139, 215.99,
        220.005, 223.906, 227.804, 231.713, 235.807, 239.558, 243.455, 247.556,
        251.304, 255.106, 259.17, 263.298, 267.428, 271.465, 275.368, 279.167,
        282.968, 287.753, 291.605, 295.553, 299.353, 303.208, 307.206, 311.154,
        315.054, 319.007, 322.758, 326.76, 330.611, 334.611, 338.511, 342.261,
        346.261, 350.061, 353.86, 357.843, 361.592, 365.637, 369.593, 373.387,
        377.193, 380.794, 384.793, 388.692, 392.595, 396.342, 400.092, 403.945,
        407.843, 411.593, 415.594, 419.344, 422.993, 426.842, 430.593, 434.492,
        438.343, 442.25, 446.244, 450.043, 453.742, 457.693, 461.642, 465.542,
        469.443, 473.342, 477.293, 481.195, 485.093, 489.045, 492.846, 496.745,
        500.543, 504.549, 508.344, 512.242, 516.092, 519.944, 523.842, 527.692,
        531.642, 535.392, 539.246, 543.145, 547.05, 550.993, 555.05, 558.893,
        562.991, 566.748, 570.552, 574.392, 578.292, 582.091, 585.848, 589.791,
        593.593, 597.343, 601.042, 604.842, 608.892, 612.744, 616.692, 620.591,
        624.312, 628.241, 631.942, 635.742, 639.811
    ]

    vol1 = [
        0, 29.433, 30.63, 62.453, 125.206, 181.236, 240.726, 292.014, 303.616,
        319.231, 325.238, 342.904, 370.22, 374.268, 377.348, 416.28, 422.724,
        432.524, 433.589, 437.71, 438.175, 438.411, 438.504, 440.426, 441.992,
        442.7, 442.821, 465.093, 482.361, 482.69, 482.694, 531.56, 546.648,
        547.328, 547.902, 547.947, 548.351, 557.872, 593.887, 594.181, 598.319,
        620.348, 641.024, 644.724, 646.774, 656.632, 672.764, 673.109, 676.209,
        684.089, 684.926, 684.989, 685.532, 686.348, 692.786, 696.485, 696.844,
        697.063, 697.142, 697.183, 697.21, 698.094, 698.121, 698.478, 702.272,
        702.313, 702.61, 702.699, 703.193, 703.436, 703.819, 703.819, 704.363,
        704.364, 704.457, 707.321, 720.965, 751.952, 752.698, 767.29, 814.741,
        898.993, 908.69, 922.046, 923.729, 927.858, 929.695, 931.464, 933.145,
        934.306, 936.028, 936.259, 937.344, 937.556, 938.469, 938.81, 938.927,
        939.181, 939.203, 939.226, 949.052, 954.091, 954.672, 954.783, 957.259,
        957.818, 958.225, 959.443, 960.55, 961.016, 961.056, 961.19, 961.466,
        961.508, 961.565, 961.63, 961.656, 961.805, 961.869, 961.881, 961.892,
        961.899, 961.939, 961.946, 961.962, 961.983, 961.988, 961.997, 962.056,
        962.06, 962.063, 962.115, 962.196, 962.198, 962.202, 962.227, 962.231,
        963.138, 963.139, 963.149, 963.282, 963.286, 963.397, 963.426, 963.563,
        963.576, 963.597, 963.6, 963.823, 963.856, 963.868, 963.869, 963.933,
        964.048, 964.746, 965.309, 965.311, 965.477, 965.89, 966.368, 966.377,
        966.377, 966.377, 966.377, 966.377
    ]

    time2 = [
        0, 3.68186, 6.18187, 8.63186, 11.1819, 13.8818, 16.4329, 18.9832,
        21.5827, 24.1366, 26.6855, 29.1824, 31.6865, 34.2331, 36.8825, 39.3325,
        41.7844, 44.3382, 46.8339, 49.3842, 52.0354, 54.633, 57.0347, 59.586,
        61.9836, 64.7979, 67.2054, 69.9003, 72.3475, 75.0029, 77.4509, 80.046,
        82.5489, 85.0492, 87.6042, 90.096, 92.8039, 95.4466, 98.0035, 100.499,
        103.049, 105.747, 108.307, 110.866, 113.467, 116.128, 118.768, 121.505,
        124.056, 126.625, 129.263, 131.806, 134.456, 137.173, 139.673, 142.32,
        144.869, 147.419, 150.019, 152.64, 155.543, 158.143, 160.693, 163.395,
        166.093, 168.496, 171.197, 173.6, 176.194, 178.795, 181.344, 183.844,
        186.401, 188.899, 191.397, 193.794, 196.543, 199.044, 201.743, 204.343,
        207.044, 209.699, 212.296, 214.895, 217.544, 220.144, 222.843, 225.502,
        228.144, 230.755, 233.299, 235.9, 238.544, 241.096, 243.742, 246.194,
        248.743, 251.598, 254.143, 256.795, 259.494, 261.943, 264.444, 266.943,
        269.444, 272.098, 274.796, 277.542, 280.043, 282.643, 285.243, 287.809,
        290.443, 292.943, 295.495, 298.043, 300.543, 302.995
    ]

    vol2 = [
        0, 21.984, 30.406, 30.631, 30.634, 30.634, 30.634, 38.037, 69.53,
        74.171, 91.729, 129.664, 168.013, 174.101, 174.196, 183.93, 237.136,
        279.035, 338.123, 349.542, 355.285, 357.893, 376.328, 389.167, 404.882,
        405.854, 442.077, 460.194, 465.597, 486.345, 534.317, 537.192, 557.074,
        557.242, 579.071, 602.941, 653.021, 728.558, 758.038, 780.355, 792.123,
        795.974, 810.667, 815.867, 830.216, 840.638, 850.983, 859.628, 860.493,
        866.569, 869.189, 869.551, 872.684, 873.983, 874.691, 876.554, 877.798,
        879.989, 883.352, 883.462, 883.478, 883.811, 894.26, 895.176, 896.35,
        898.954, 898.997, 899.259, 899.317, 901.465, 903.818, 904.56, 905.553,
        919.417, 921.683, 928.475, 933.257, 935.454, 937.447, 945.186, 946.426,
        948.599, 948.6, 953.379, 955.823, 958.655, 958.737, 959.347, 959.489,
        959.823, 959.996, 960.036, 960.065, 960.782, 960.782, 960.795, 961.432,
        961.951, 962.04, 962.506, 962.52, 962.594, 962.842, 962.842, 962.944,
        963.227, 963.615, 963.832, 963.862, 963.862, 963.862, 963.862, 963.862,
        963.862, 963.862, 963.862, 963.862, 963.862
    ]

    time3 = [
        250.658, 255.333, 262.76, 268.774, 277.308, 283.26, 287.687, 294.958,
        299.621, 306.076, 311.508, 318.449, 321.572, 327.394, 333.925, 338.75,
        344.59, 348.953, 353.566, 358.29, 363.848, 369.681, 375.345, 382.735,
        389.425, 396.412, 402.275, 410.218, 418.895, 427.847, 434.697, 440.384,
        448.858, 455.939, 461.24, 466.639, 471.942, 477.117, 482.711, 486.756,
        492.882, 497.812, 505.314, 512.067, 519.27, 527.329, 536.366, 543.21,
        551.283, 556.913, 566.644, 574.773, 581.077, 590.408, 597.843, 605.971,
        611.909, 616.929, 623.685, 628.789, 633.472, 641.761, 649.843, 659.553,
        665.994, 673.215, 681.997, 691.312, 699.604, 697.08, 713.518, 721.5,
        728.469, 735.868, 742.933, 748.522, 753.675, 761.771, 768.64, 775.292,
        781.178, 789.658, 795.366, 803.381, 808.468, 815.439, 822.092, 830.493,
        838.05, 844.685, 842.231
    ]

    vol3 = [
        185.168, 204.096, 258.16, 271.528, 315.992, 412.904, 432.992, 453.024,
        462.976, 491.512, 536.872, 577.592, 588.976, 608.424, 612.368, 613.704,
        615.016, 702.848, 728.904, 751.448, 802.232, 816.2, 853.696, 870.792,
        874.432, 879.152, 887.256, 887.544, 886.848, 891.72, 897.944, 901.256,
        902.504, 916.312, 920.248, 923.272, 926.208, 927.016, 927.288, 928.72,
        930.696, 933.904, 934.232, 935.808, 937.016, 937.712, 939.288, 942.04,
        942.552, 943.136, 942.568, 942.552, 942.464, 948.064, 950.52, 973.92,
        979.216, 982.56, 986.888, 990.952, 991.896, 991.424, 991.912, 992.592,
        992.664, 993.328, 994.248, 994.808, 995.792, 997.2, 998.84, 999.024,
        999.064, 999.28, 1000.83, 1001.36, 1001.36, 1001.74, 1001.82, 1001.82,
        1001.85, 1003.46, 1003.48, 1003.53, 1004.6, 1004.55, 1005.74, 1004.95,
        1005.1, 1005.1, 1005.17
    ]

    time4 = [
        0, 2.43716, 3.82096, 5.0862, 6.32332, 7.58622, 8.8375, 10.0867,
        11.3447, 12.4875, 13.7467, 15.0388, 16.3476, 17.6752, 19.0253, 20.3891,
        21.7874, 22.9883, 24.2881, 25.5886, 26.8508, 28.0895, 29.3886, 30.6489,
        31.888, 33.0876, 34.4443, 35.6457, 36.9925, 38.3382, 39.5882, 40.939,
        42.1405, 43.347, 44.5895, 45.9391, 47.2575, 48.5468, 49.8442, 51.088,
        52.3907, 53.6473, 55.0399, 56.4442, 57.7821, 59.1462, 60.4141, 61.6136,
        63.0213, 64.3638, 65.6638, 66.9308, 68.214, 69.5135, 70.8638, 72.1642,
        73.5133, 74.717, 75.9643, 77.2151, 78.5143, 79.8134, 81.164, 82.4144,
        83.8144, 85.2161, 86.5146, 87.7152, 89.0276, 90.4134, 91.7143, 93.0133,
        94.3649, 95.7851, 97.0645, 98.3637, 99.7642, 101.014, 102.365, 103.617,
        104.814, 106.114, 107.364, 108.767, 110.068, 111.267, 112.468, 113.824,
        115.168, 116.468, 117.822, 119.064, 120.325, 121.614, 122.964, 124.214,
        125.464, 126.764, 127.964, 129.164, 130.464
    ]
    vol4 = [
        0, 12.867, 23.447, 29.504, 30.253, 30.438, 34.673, 55.158, 63.005,
        81.875, 104.922, 137.518, 185.997, 203.916, 217.842, 283.732, 312.428,
        320.414, 330.654, 335.373, 338.787, 353.686, 363.861, 385.159, 391.567,
        393.911, 394.348, 394.452, 394.798, 395.805, 396.946, 398.154, 398.337,
        412.4, 439.456, 471.855, 508.204, 559.098, 575.873, 601.943, 635.361,
        668.793, 707.037, 737.354, 769.653, 805.503, 821.321, 828.303, 847.781,
        857.205, 859.769, 862.074, 864.842, 865.463, 865.581, 865.587, 865.697,
        875.927, 882.286, 892.405, 900.44, 904.408, 905.894, 906.901, 911.299,
        920.604, 924.551, 928.222, 929.318, 930.015, 930.015, 930.04, 932.113,
        935.088, 941.071, 942.064, 943.343, 943.973, 945.936, 947.083, 947.497,
        948.065, 948.421, 953.188, 953.566, 953.795, 953.801, 953.801, 953.801,
        953.801, 953.801, 953.801, 953.801, 953.801, 953.801, 953.801, 953.801,
        953.801, 953.801, 953.801, 953.801
    ]

    for i in range(1, len(time3)):
        time3[i] = time3[i] - time3[0]
    time3[0] = 0
    for i in range(1, len(vol3)):
        vol3[i] = vol3[i] - vol3[0]
    vol3[0] = 0
    for i in range(len(vol3)):
        vol3[i] = vol3[i] * 900 / (1005.17 - 185.168)
        
    vol10 = vol1[len(vol1)-1]
    for i in range(len(vol1)):
        vol1[i] = vol1[i] * 950 / vol10 

    

    for i in range(len(vol4)):
        vol4[i] = vol4[i] * 965 / 953.801

    fig, ax = plt.subplots()  # Create a figure containing a single axes.

    ax.plot(time1, vol1, '-r', label='Classic frontier')
    ax.plot(time2, vol2, '-g', label='Rapid frontier')
    ax.plot(time3, vol3, color='#FF00FF', label='NBVP')
    ax.plot(time4, vol4, '-b', label='Proposed')

    # plt.locator_params(axis='x', nbins=5)
    # plt.locator_params(axis='y', nbins=8)
    ax.set_xlim([0, 420])
    ax.set_ylim([0, 1020])
    ax.set_xlabel("Time (s)")
    ax.set_ylabel("Coverage (m^3)")
    ax.legend(loc=0)
    plt.grid()
    plt.show()


def plotBar():
    labels = ['0.20', '0.25', '0.30', '0.35', '0.40']
    succ1 = [10, 10, 10, 10, 10]
    succ2 = [10, 10, 10, 9, 9]
    succ3 = [10, 9, 8, 6, 4]
    succ4 = [10, 10, 9, 8, 8]

    x = np.arange(len(labels))  # the label locations
    width = 0.15  # the width of the bars

    fig, ax = plt.subplots()
    rects1 = ax.bar(x - width * 3 / 2,
                    succ1,
                    width,
                    color='red',
                    label='Proposed')
    rects2 = ax.bar(x - width / 2, succ2, width, color='green', label='FASTER')
    rects2 = ax.bar(x + width / 2, succ3, width, color='blue', label='EWOK')
    rects2 = ax.bar(x + width * 3 / 2,
                    succ4,
                    width,
                    color='y',
                    label='RB Traj')

    # Add some text for labels, title and custom x-axis tick labels, etc.
    ax.set_ylabel('Success number')
    ax.set_ylim([0, 11])

    ax.set_xlabel('Density (obs./m^2)')
    ax.set_xticks(x)
    ax.set_xticklabels(labels)
    ax.legend(loc=3)
    ax.grid(zorder=0, linestyle='--')
    ax.set_axisbelow(True)
    plt.show()


def calcMean():

    # Maze data
    time1 = [760.259033, 961.311531, 721.915655]
    len1 = [373.980500, 509.091912, 375.619217]

    time2 = [766.832, 613.038610, 629.269486]
    len2 = [451.916439, 514.677661, 440.675932]

    time3 = [1253.63, 925.429, 934.841]
    len3 = [1440.01, 1898.33, 1279.08]

    time4 = [158.083485, 192.122, 156.687990]
    len4 = [264.91, 310.071, 266.739]

    time1 = np.array(time1)
    time2 = np.array(time2)
    time3 = np.array(time3)
    time4 = np.array(time4)
    print "time 1: ", time1.mean(), time1.std(), time1.max(), time1.min()
    print "time 2: ", time2.mean(), time2.std(), time2.max(), time2.min()
    print "time 3: ", time3.mean(), time3.std(), time3.max(), time3.min()
    print "time 4: ", time4.mean(), time4.std(), time4.max(), time4.min()

    len1 = np.array(len1)
    len2 = np.array(len2)
    len3 = np.array(len3)
    len4 = np.array(len4)
    print "len 1: ", len1.mean(), len1.std(), len1.max(), len1.min()
    print "len 2: ", len2.mean(), len2.std(), len2.max(), len2.min()
    print "len 3: ", len3.mean(), len3.std(), len3.max(), len3.min()
    print "len 4: ", len4.mean(), len4.std(), len4.max(), len4.min()

    # Bridge data

    time1 = [611.745371, 743.394225, 671.880361]
    len1 = [474.244280, 390.644114, 485.456696]

    time2 = [292.598866, 305.281944, 293.835056, 264.060528]
    len2 = [293.456788, 303.753547, 277.847244, 269.325682]

    time3 = [814.951, 740.233, 1018.65]
    len3 = [377.868, 261.464, 327.91]

    time4 = [105.361423, 105.921566, 102.498904]
    len4 = [170.421592, 165.215106, 161.106201]

    time1 = np.array(time1)
    time2 = np.array(time2)
    time3 = np.array(time3)
    time4 = np.array(time4)
    len1 = np.array(len1)
    len2 = np.array(len2)
    len3 = np.array(len3)
    len4 = np.array(len4)
    print "time 1: ", time1.mean(), time1.std(), time1.max(), time1.min()
    print "len 1: ", len1.mean(), len1.std(), len1.max(), len1.min()
    print "time 2: ", time2.mean(), time2.std(), time2.max(), time2.min()
    print "len 2: ", len2.mean(), len2.std(), len2.max(), len2.min()
    print "time 3: ", time3.mean(), time3.std(), time3.max(), time3.min()
    print "len 3: ", len3.mean(), len3.std(), len3.max(), len3.min()
    print "time 4: ", time4.mean(), time4.std(), time4.max(), time4.min()
    print "len 4: ", len4.mean(), len4.std(), len4.max(), len4.min()


if __name__ == "__main__":
    # benchmark()
    # plotMaze()
    plotBridge()

    # calcMean()